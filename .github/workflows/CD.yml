name: Deploy on Dev

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_on_dev:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Generate and Upload .env File
        run: |
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} "
            if [ ! -d node-microservices ]; then
              echo 'node-microservices directory does not exist. Cloning...'
              git clone https://github.com/gevorgabgaryan/node-microservices.git node-microservices
            fi
            echo 'Creating .env file...'
            cd node-microservices &&
            touch .env &&
            echo PORT=${{ secrets.PORT }} >> .env &&
            echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env &&
            echo JWT_EXPIRE_IN=${{ secrets.JWT_EXPIRE_IN }} >> .env &&
            echo MONGO_DB_URL=${{ secrets.MONGO_DB_URL }} >> .env &&
            echo MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }} >> .env &&
            echo MAIL_EMAIL=${{ secrets.MAIL_EMAIL }} >> .env &&
            echo MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} >> .env &&
            echo REDIS_URL=${{ secrets.REDIS_URL }} >> .env &&
            echo NODE_ENV=production >> .env
            echo '.env file created and populated.'
          "

      - name: Generate and Upload .env Files for Microservices
        run: |
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} "
            set -e
            cd node-microservices/microservices &&
            declare -A ports=( [auth-service]=${{ secrets.AUTH_PORT }} [catalog-service]=${{ secrets.CATALOG_PORT }} )
            for service in auth-service catalog-service order-service; do
              if [ -d \"\$service\" ]; then
                echo 'Creating .env file in' \"\$service\" '...'
                cd \"\$service\"
                if [ -f .env ]; then
                  echo '.env file already exists in' \"\$service\" '. Skipping...'
                else
                  touch .env
                  echo \"PORT=\${ports[\$service]}\" >> .env
                  echo \"JWT_SECRET=${{ secrets.JWT_SECRET }}\" >> .env
                  echo \"JWT_EXPIRE_IN=${{ secrets.JWT_EXPIRE_IN }}\" >> .env
                  echo \"MONGO_DB_URL=${{ secrets.MONGO_DB_URL }}\" >> .env
                  echo \"MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}\" >> .env
                  echo \"WS_PORT=${{ secrets.WS_PORT }}\" >> .env
                  echo \"REDIS_URL=${{ secrets.REDIS_URL }}\" >> .env
                  echo \"NODE_ENV=production\" >> .env
                  echo '.env file created and populated for ' \"\$service\"
                fi
                cd ..
              else
                echo \"\$service directory does not exist. Skipping...\"
              fi
            done
          "


      - name: Pull latest changes and restart application
        run: |
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} "
            if [ -d node-microservices ] && [ -d node-microservices/.git ]; then
              echo 'Deploying application...'
              cd node-microservices &&
              git pull &&
              docker-compose up --build -d
              echo 'Deployment complete.'
            else
              echo 'node-microservices is not a valid Git repository. Cloning...'
              git clone https://github.com/gevorgabgaryan/node-microservices.git node-microservices
              cd node-microservices &&
              docker-compose up --build -d
              echo 'Deployment complete.'
            fi
          "
